# Строки по факту это массивы, этих символов. То сделали отдельный тип данных стринг. 
# Самое главное, в питоне строки могут в двойные и в одинарные ковычки, это не влият на функционал, 
# если вам нужно сделать. Также если строка длинныая её можно разметить в круглых скобках, получится многострочный текст. 
# Также строка внетри себя можнт содержать нескольками символами. "\" позволяют что-то добавить он \n - это вставка переход на новую строку
# "\t табуляция"

# a = 25 
# n = "Alice"

# Строка это массив, начинается с 0. [1,2,3]
# S[2]
# for i in s
# S[1:2] от куда до туда.
# S[1:2:3]
# .lower
# .upper

"Напишите функцию search_substr(subst, st), которая принимает 2 строки и определяет," 
"имеется ли подстрока subst в строке st. В случае нахождения подстроки," 
"возвращается фраза «Есть контакт!»," 
"а иначе «Мимо!». Должно быть найдено совпадение независимо от регистра обеих строк."

# def search_substr(subst, st):
#     st = st.lower()
#     subst= subst.lower()
#     if subst in st:
#         print("Есть контакт!")
#     else:
#         print("Мимо!")

# search_substr("dhd","JKJdhdjshdKDjdjflk")

# Требуется определить индексы первого и последнего вхождения 
# буквы в строке. Для этого нужно написать функцию first_last(letter, st), 
# включающую 2 параметра: letter – искомый символ, st – целевая строка. 
# В случае отсутствия буквы в строке, нужно вернуть массив (0, 0), 
# если же она есть, то массив будет состоять из первого и последнего индекса этого символа.

# def first_last(letter, st):
#     first = st.find(letter)
#     if first < 0:
#         return [None,None]
#     else:
#         last = st.rfind(letter)
#     return [first, last]

# print(first_last("a", "sljfhlkjg"))



# На основании предоставленного отрывка текста определить 3 наиболее часто встречаемых 
# символа в ней. Пробелы нужно игнорировать (не учитывать при подсчете). Для выведения 
# результатов вычислений требуется написать функцию top3(st). Итог работы функции представить 
# в виде строки: «символ – количество раз, символ – количество раз…».

# from collections import Counter

# def top3(st):    
#     counter_top3 = Counter(st.replace(' ', '')).most_common(3)
#     return ','.join([f'{letter} - {cnt}' for letter, cnt in counter_top3])

# print(top3("Шла Саша по Шоссе и сосала сушку"))

